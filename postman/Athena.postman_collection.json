{
	"info": {
		"_postman_id": "7307b1ed-b563-42fb-beee-930c2d2152de",
		"name": "Athena",
		"description": "Athena API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login as admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19825ee1-0f2b-411e-b389-221ca0929033",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests[\"response contains 'access' property\"] = responseJSON.hasOwnProperty('access');",
											"",
											"if (tests[\"response contains 'access' property\"]) { ",
											"    pm.globals.set(\"access_token\", responseJSON.access);",
											"}",
											"",
											"tests[\"Global variable 'access_token' has been set\"] = pm.globals.get('access_token') === responseJSON.access;",
											"",
											"tests[\"response contains 'refresh' property\"] = responseJSON.hasOwnProperty('refresh');",
											"",
											"if (tests[\"response contains 'refresh' property\"]) { ",
											"    pm.globals.set(\"refresh_token\", responseJSON.refresh);",
											"}",
											"",
											"tests[\"Global variable 'refresh' has been set\"] = pm.globals.get('refresh_token') === responseJSON.refresh;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{admin_username}}\",\n\t\"password\": \"{{admin_password}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/login/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								},
								"description": "Login. Very simple. Really."
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\":\"admin\",\n\t\"password\":\"admin\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/login/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:59 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "351"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoic2xpZGluZyIsImV4cCI6MTU1NTk3NzE3OSwianRpIjoiY2Q4OGMxM2NhMDgyNGFhZWFhMjJjOTQ1ODAzYjMzZTMiLCJyZWZyZXNoX2V4cCI6MTU1NTk3NzE3OSwidXNlcl9pZCI6IjJiOTk1MDdiLTk3ODMtNDRhZC05MDAwLTQ3OGU2MTUwYTlmNSIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdfQ.5YiEhdnrmmTZXrHKzLukTuL84IiU9ShJXkx744EijWE\"\n}"
								}
							]
						},
						{
							"name": "Verify token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19825ee1-0f2b-411e-b389-221ca0929033",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{access_token}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/token/verify/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"token",
										"verify",
										""
									]
								},
								"description": "Login. Very simple. Really."
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\":\"admin\",\n\t\"password\":\"admin\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/login/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:59 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "351"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoic2xpZGluZyIsImV4cCI6MTU1NTk3NzE3OSwianRpIjoiY2Q4OGMxM2NhMDgyNGFhZWFhMjJjOTQ1ODAzYjMzZTMiLCJyZWZyZXNoX2V4cCI6MTU1NTk3NzE3OSwidXNlcl9pZCI6IjJiOTk1MDdiLTk3ODMtNDRhZC05MDAwLTQ3OGU2MTUwYTlmNSIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdfQ.5YiEhdnrmmTZXrHKzLukTuL84IiU9ShJXkx744EijWE\"\n}"
								}
							]
						},
						{
							"name": "Refresh token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19825ee1-0f2b-411e-b389-221ca0929033",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests[\"response contains 'access' property\"] = responseJSON.hasOwnProperty('access');",
											"",
											"if (tests[\"response contains 'access' property\"]) { ",
											"    pm.globals.set(\"access_token\", responseJSON.access);",
											"}",
											"",
											"tests[\"Global variable 'access_token' has been set\"] = pm.globals.get('access_token') === responseJSON.access;",
											"",
											"tests[\"response contains 'refresh' property\"] = responseJSON.hasOwnProperty('refresh');",
											"",
											"if (tests[\"response contains 'refresh' property\"]) { ",
											"    pm.globals.set(\"refresh_token\", responseJSON.refresh);",
											"}",
											"",
											"tests[\"Global variable 'refresh' has been set\"] = pm.globals.get('refresh_token') === responseJSON.refresh;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/token/refresh/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								},
								"description": "Login. Very simple. Really."
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\":\"admin\",\n\t\"password\":\"admin\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/login/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:59 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "351"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoic2xpZGluZyIsImV4cCI6MTU1NTk3NzE3OSwianRpIjoiY2Q4OGMxM2NhMDgyNGFhZWFhMjJjOTQ1ODAzYjMzZTMiLCJyZWZyZXNoX2V4cCI6MTU1NTk3NzE3OSwidXNlcl9pZCI6IjJiOTk1MDdiLTk3ODMtNDRhZC05MDAwLTQ3OGU2MTUwYTlmNSIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdfQ.5YiEhdnrmmTZXrHKzLukTuL84IiU9ShJXkx744EijWE\"\n}"
								}
							]
						},
						{
							"name": "Get profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a236e34f-72db-4b9b-95c1-ff1df37ca202",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
											"tests[\"response contains 'username' property\"] = responseJSON.hasOwnProperty('username');",
											"tests[\"response contains 'firstName' property\"] = responseJSON.hasOwnProperty('firstName');",
											"tests[\"response contains 'secondName' property\"] = responseJSON.hasOwnProperty('secondName');",
											"tests[\"response contains 'lastName' property\"] = responseJSON.hasOwnProperty('lastName');",
											"",
											"tests[\"response contains 'roles' property with 'admin' value\"] = responseJSON.hasOwnProperty('roles') && responseJSON.roles.includes('admin');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/auth/profile/me/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"profile",
										"me",
										""
									]
								},
								"description": "Taking id for current user"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e067a480-58dc-4da8-9965-609ec5023351",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "968165af-1952-4580-b074-aea79e898a13",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Create user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4409ad7-1f76-4e94-8c41-3ca421ead778",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
											"",
											"if (tests[\"response contains 'id' property\"]) {",
											"    pm.globals.set(\"user_id\", responseJSON.id);",
											"    pm.globals.set(\"student_id\", responseJSON.id);",
											"}",
											"",
											"tests[\"response contains 'username' property\"] = responseJSON.hasOwnProperty('username');",
											"tests[\"response contains 'firstName' property\"] = responseJSON.hasOwnProperty('firstName');",
											"tests[\"response contains 'secondName' property\"] = responseJSON.hasOwnProperty('secondName');",
											"tests[\"response contains 'lastName' property\"] = responseJSON.hasOwnProperty('lastName');",
											"tests[\"response does not contains 'password' property\"] = !responseJSON.hasOwnProperty('password');",
											"",
											"tests[\"response contains 'roles' property\"] = responseJSON.hasOwnProperty('roles');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "00a3b9fd-8a52-4ab5-983c-067bdcea4041",
										"exec": [
											"pm.globals.set(\"testuser_username\", \"testuser01\");",
											"pm.globals.set(\"testuser_password\", \"pass\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{testuser_username}}\",\n\t\"password\":\"{{testuser_password}}\",\n\t\"first_name\":\"Иван\",\n\t\"second_name\":\"Иванов\",\n\t\"last_name\":\"Иванович\",\n\t\"roles\":[\n\t\t\"student\"\n\t\t]\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/users/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14771b91-2695-4f71-b090-dc67a56ff602",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"for (let i = 0; i < responseJSON.length; i++) {",
											"    let user = responseJSON[i];",
											"    tests[`user ${i} in response contains 'id' property`] = user.hasOwnProperty('id');",
											"    tests[`user ${i} in response contains 'username' property`] = user.hasOwnProperty('username');",
											"    tests[`user ${i} in response contains 'firstName' property`] = user.hasOwnProperty('firstName');",
											"    tests[`user ${i} in response contains 'secondName' property`] = user.hasOwnProperty('secondName');",
											"    tests[`user ${i} in response contains 'lastName' property`] = user.hasOwnProperty('lastName');",
											"",
											"    tests[`user ${i} in response contains 'roles' property`] = user.hasOwnProperty('roles');",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/auth/users/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c088062-bfb0-4748-aa39-fe245c8de921",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests[\"response contains 'id' property equal to env var value\"] = responseJSON.hasOwnProperty('id') && responseJSON.id ===  pm.globals.get(\"user_id\");",
											"",
											"tests[\"response contains 'username' property\"] = responseJSON.hasOwnProperty('username');",
											"tests[\"response contains 'firstName' property\"] = responseJSON.hasOwnProperty('firstName');",
											"tests[\"response contains 'secondName' property\"] = responseJSON.hasOwnProperty('secondName');",
											"tests[\"response contains 'lastName' property\"] = responseJSON.hasOwnProperty('lastName');",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\":\"{{testuser_username}}\",\n\t\"second_name\":\"{{testuser_username}}\",\n\t\"last_name\":\"{{testuser_username}}\",\n\t\"roles\":[\n\t\t\"student\"\n\t\t]\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/users/{{user_id}}/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"users",
										"{{user_id}}",
										""
									]
								}
							},
							"response": [
								{
									"name": "Edit user",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"first_name\":\"Иван\",\n\t\"second_name\":\"Иванов\",\n\t\"last_name\":\"Иванович\",\n\t\"roles\":[\n\t\t\"admin\"\n\t\t]\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/users/{{user_id}}/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"users",
												"{{user_id}}",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:48 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "163"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2b99507b-9783-44ad-9000-478e6150a9f5\",\n    \"username\": \"admin\",\n    \"firstName\": \"Иван\",\n    \"secondName\": \"Иванов\",\n    \"lastName\": \"Иванович\",\n    \"roles\": [\n        \"admin\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Login as new user Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a178493-69a5-42d1-afbd-1923891e5788",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests[\"response contains 'access' property\"] = responseJSON.hasOwnProperty('access');",
											"",
											"if (tests[\"response contains 'access' property\"]) { ",
											"    pm.globals.set(\"access_token\", responseJSON.access);",
											"}",
											"",
											"tests[\"Global variable 'access_token' has been set\"] = pm.globals.get('access_token') === responseJSON.access;",
											"",
											"tests[\"response contains 'refresh' property\"] = responseJSON.hasOwnProperty('refresh');",
											"",
											"if (tests[\"response contains 'refresh' property\"]) { ",
											"    pm.globals.set(\"refresh_token\", responseJSON.refresh);",
											"}",
											"",
											"tests[\"Global variable 'refresh' has been set\"] = pm.globals.get('refresh_token') === responseJSON.refresh;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{testuser_username}}\",\n\t\"password\": \"{{testuser_password}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/login/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								},
								"description": "Check new user. Get error if not created."
							},
							"response": []
						},
						{
							"name": "Set password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c088062-bfb0-4748-aa39-fe245c8de921",
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"new_password\":\"{{testuser_password}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/profile/me/password/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"profile",
										"me",
										"password",
										""
									]
								}
							},
							"response": [
								{
									"name": "Edit user",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"first_name\":\"Иван\",\n\t\"second_name\":\"Иванов\",\n\t\"last_name\":\"Иванович\",\n\t\"roles\":[\n\t\t\"admin\"\n\t\t]\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/users/{{user_id}}/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"users",
												"{{user_id}}",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:48 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "163"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2b99507b-9783-44ad-9000-478e6150a9f5\",\n    \"username\": \"admin\",\n    \"firstName\": \"Иван\",\n    \"secondName\": \"Иванов\",\n    \"lastName\": \"Иванович\",\n    \"roles\": [\n        \"admin\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Login as admin Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19825ee1-0f2b-411e-b389-221ca0929033",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests[\"response contains 'access' property\"] = responseJSON.hasOwnProperty('access');",
											"",
											"if (tests[\"response contains 'access' property\"]) { ",
											"    pm.globals.set(\"access_token\", responseJSON.access);",
											"}",
											"",
											"tests[\"Global variable 'access_token' has been set\"] = pm.globals.get('access_token') === responseJSON.access;",
											"",
											"tests[\"response contains 'refresh' property\"] = responseJSON.hasOwnProperty('refresh');",
											"",
											"if (tests[\"response contains 'refresh' property\"]) { ",
											"    pm.globals.set(\"refresh_token\", responseJSON.refresh);",
											"}",
											"",
											"tests[\"Global variable 'refresh' has been set\"] = pm.globals.get('refresh_token') === responseJSON.refresh;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{admin_username}}\",\n\t\"password\": \"{{admin_password}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/login/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								},
								"description": "Login. Very simple. Really."
							},
							"response": [
								{
									"name": "Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\":\"admin\",\n\t\"password\":\"admin\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/login/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:59 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "351"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoic2xpZGluZyIsImV4cCI6MTU1NTk3NzE3OSwianRpIjoiY2Q4OGMxM2NhMDgyNGFhZWFhMjJjOTQ1ODAzYjMzZTMiLCJyZWZyZXNoX2V4cCI6MTU1NTk3NzE3OSwidXNlcl9pZCI6IjJiOTk1MDdiLTk3ODMtNDRhZC05MDAwLTQ3OGU2MTUwYTlmNSIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdfQ.5YiEhdnrmmTZXrHKzLukTuL84IiU9ShJXkx744EijWE\"\n}"
								}
							]
						},
						{
							"name": "Set password as admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c088062-bfb0-4748-aa39-fe245c8de921",
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"new_password\":\"{{testuser_password}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/profile/{{testuser_username}}/password/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"profile",
										"{{testuser_username}}",
										"password",
										""
									]
								}
							},
							"response": [
								{
									"name": "Edit user",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"first_name\":\"Иван\",\n\t\"second_name\":\"Иванов\",\n\t\"last_name\":\"Иванович\",\n\t\"roles\":[\n\t\t\"admin\"\n\t\t]\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/users/{{user_id}}/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"users",
												"{{user_id}}",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:52:48 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "163"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2b99507b-9783-44ad-9000-478e6150a9f5\",\n    \"username\": \"admin\",\n    \"firstName\": \"Иван\",\n    \"secondName\": \"Иванов\",\n    \"lastName\": \"Иванович\",\n    \"roles\": [\n        \"admin\"\n    ]\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Students",
					"item": [
						{
							"name": "Get all students",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "235ca9ab-2306-4493-9480-70c6f4b2a7fb",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"for (let i = 0; i < responseJSON.length; i++) {",
											"    let student = responseJSON[i];",
											"    tests[`student ${i} in response contains 'id' property`] = student.hasOwnProperty('id');",
											"    tests[`student ${i} in response contains 'cipher' property`] = student.hasOwnProperty('cipher');",
											"    tests[`student ${i} in response contains 'studentGroup' property`] = student.hasOwnProperty('studentGroup');",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/auth/students/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"students",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Tutors",
					"item": [
						{
							"name": "Get all tutors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/auth/tutors/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"tutors",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Teachers",
					"item": [
						{
							"name": "Get all teachers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/auth/teachers/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"teachers",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Edu",
			"item": [
				{
					"name": "Specialities",
					"item": [
						{
							"name": "Create speciality",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd68100-22cb-49bb-b1b5-22ff9cca32a4",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
											"",
											"pm.globals.set(\"speciality_id\", responseJSON.id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Программная инженерия\",\n    \"cipher\": \"09.03.02\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/edu/specialities/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"specialities",
										""
									]
								}
							},
							"response": [
								{
									"name": "Create speciality",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Программная инженерия\",\n    \"cipher\": \"09.03.02\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/edu/specialities/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"specialities",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 19:44:22 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, POST, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "116"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"c55e92ce-1166-4faf-9222-85bcff426af4\",\n    \"name\": \"Программная инженерия\",\n    \"cipher\": \"09.03.02\"\n}"
								}
							]
						},
						{
							"name": "Get all specialities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/edu/specialities/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"specialities",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit speciality",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Программная инженерия\",\n    \"cipher\": \"09.03.04\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/edu/specialities/{{speciality_id}}/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"specialities",
										"{{speciality_id}}",
										""
									]
								}
							},
							"response": [
								{
									"name": "Edit speciality",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Программная инженерия\",\n    \"cipher\": \"09.03.04\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/edu/specialities/{{speciality_id}}/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"specialities",
												"{{speciality_id}}",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 20:52:32 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "116"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"c55e92ce-1166-4faf-9222-85bcff426af4\",\n    \"name\": \"Программная инженерия\",\n    \"cipher\": \"09.03.04\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Subjects",
					"item": [
						{
							"name": "Create subject",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c4fd10e-e72f-45b5-a4bc-464ecd5a571f",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
											"",
											"pm.globals.set(\"subject_id\", responseJSON.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"ООП\",\n\t\"semester\":2\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/edu/subjects/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"subjects",
										""
									]
								}
							},
							"response": [
								{
									"name": "Create subject",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\":\"ООП\",\n\t\"semester\":2\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/edu/subjects/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"subjects",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2019 14:20:35 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, POST, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "74"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"df0c4bd5-4d39-4ba1-a5b4-3493b8394311\",\n    \"name\": \"ООП\",\n    \"semester\": 2\n}"
								}
							]
						},
						{
							"name": "Get all subjects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/edu/subjects/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"subjects",
										""
									]
								}
							},
							"response": [
								{
									"name": "Get all subjects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/api/edu/subjects/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"subjects",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2019 14:20:50 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, POST, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"0edba675-3602-4fbf-ae0b-d5b17e2ad1a5\",\n        \"name\": \"ООП\",\n        \"semester\": 3\n    },\n    {\n        \"id\": \"df0c4bd5-4d39-4ba1-a5b4-3493b8394311\",\n        \"name\": \"ООП\",\n        \"semester\": 2\n    }\n]"
								}
							]
						},
						{
							"name": "Edit subject",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"ООП\",\n\t\"semester\":\"3\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/edu/subjects/{{subject_id}}/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"subjects",
										"{{subject_id}}",
										""
									]
								}
							},
							"response": [
								{
									"name": "Edit subject",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\":\"ООП\",\n\t\"semester\":\"3\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/edu/subjects/{{subject_id}}/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"subjects",
												"{{subject_id}}",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2019 14:20:24 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "74"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0edba675-3602-4fbf-ae0b-d5b17e2ad1a5\",\n    \"name\": \"ООП\",\n    \"semester\": 3\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Students Groups",
					"item": [
						{
							"name": "Create student group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ff7081a-d1aa-4ae6-b2f9-927eef550741",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
											"",
											"pm.globals.set(\"student_group_id\", responseJSON.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"ИКБО-13-17\",\n\t\"speciality\":\"{{speciality_id}}\",\n\t\"quantity\":\"30\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/edu/student-groups/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"student-groups",
										""
									]
								}
							},
							"response": [
								{
									"name": "Get all subjects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/api/edu/subjects/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"subjects",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2019 14:20:50 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, POST, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"0edba675-3602-4fbf-ae0b-d5b17e2ad1a5\",\n        \"name\": \"ООП\",\n        \"semester\": 3\n    },\n    {\n        \"id\": \"df0c4bd5-4d39-4ba1-a5b4-3493b8394311\",\n        \"name\": \"ООП\",\n        \"semester\": 2\n    }\n]"
								},
								{
									"name": "Create student group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\":\"ИКБО-13-17\",\n\t\"speciality\":\"{{speciality_id}}\",\n\t\"quantity\":\"30\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/edu/student-groups/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"student-groups",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 20:54:43 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, POST, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "135"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"19c85e69-6d9d-4cc5-a41f-dcf16e293ade\",\n    \"name\": \"ИКБО-13-17\",\n    \"speciality\": \"c55e92ce-1166-4faf-9222-85bcff426af4\",\n    \"quantity\": 30\n}"
								}
							]
						},
						{
							"name": "Get all students groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/edu/student-groups/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"student-groups",
										""
									]
								}
							},
							"response": [
								{
									"name": "Get all subjects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/api/edu/subjects/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"edu",
												"subjects",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2019 14:20:50 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, POST, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"0edba675-3602-4fbf-ae0b-d5b17e2ad1a5\",\n        \"name\": \"ООП\",\n        \"semester\": 3\n    },\n    {\n        \"id\": \"df0c4bd5-4d39-4ba1-a5b4-3493b8394311\",\n        \"name\": \"ООП\",\n        \"semester\": 2\n    }\n]"
								}
							]
						},
						{
							"name": "Edit student group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"ИКБО-13-17\",\n\t\"speciality\":\"{{speciality_id}}\",\n\t\"quantity\":\"31\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/edu/student-groups/{{student_group_id}}/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"edu",
										"student-groups",
										"{{student_group_id}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit student",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cipher\": \"17И01234\",\n    \"studentGroup\": \"{{student_group_id}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/auth/students/{{student_id}}/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"auth",
										"students",
										"{{student_id}}",
										""
									]
								}
							},
							"response": [
								{
									"name": "Edit student",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cipher\": \"17И01234\",\n    \"studentGroup\": \"{{student_group_id}}\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/api/auth/students/{{student_id}}/",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"api",
												"auth",
												"students",
												"{{student_id}}",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 15 Apr 2019 23:41:19 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.7.2"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Allow",
											"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Vary",
											"value": "Origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"f6fa5190-804b-4465-9d4c-e156d456d51d\",\n    \"cipher\": \"17И01234\",\n    \"studentGroup\": \"19c85e69-6d9d-4cc5-a41f-dcf16e293ade\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Works",
			"item": [
				{
					"name": "Create task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f14f060f-2997-4f8e-b4f1-836897aa885e",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"",
									"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
									"",
									"pm.globals.set(\"task_id\", responseJSON.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Лабораторная работа 1\",\n    \"subject\": \"{{subject_id}}\",\n    \"student_group\": \"{{student_group_id}}\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/works/tasks/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"tasks",
								""
							]
						}
					},
					"response": [
						{
							"name": "Create task",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Лабораторная работа № 1\",\n    \"subject\": \"{{subject_id}}\",\n    \"student_group\": \"{{student_group_id}}\"\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/api/works/tasks/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"works",
										"tasks",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 15 Apr 2019 23:19:01 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.7.2"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Content-Length",
									"value": "356"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4f04b018-bfcc-45c6-9d82-9426dfc458b5\",\n    \"name\": \"Лабораторная работа № 1\",\n    \"description\": \"\",\n    \"file\": null,\n    \"attachment\": null,\n    \"deadline\": null,\n    \"createDatetime\": \"2019-04-15T23:19:01.229223Z\",\n    \"editDatetime\": \"2019-04-15T23:19:01.229223Z\",\n    \"subject\": \"4fa0b764-8913-49d6-a455-8d6eb6d0c8ec\",\n    \"studentGroup\": \"19c85e69-6d9d-4cc5-a41f-dcf16e293ade\"\n}"
						}
					]
				},
				{
					"name": "Get all tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/works/tasks/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"tasks",
								""
							]
						}
					},
					"response": [
						{
							"name": "Get all tasks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/api/works/tasks/",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"works",
										"tasks",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 15 Apr 2019 23:57:10 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.7.2"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Content-Length",
									"value": "715"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"4f04b018-bfcc-45c6-9d82-9426dfc458b5\",\n        \"name\": \"Лабораторная работа № 1\",\n        \"description\": \"\",\n        \"file\": null,\n        \"attachment\": null,\n        \"deadline\": null,\n        \"createDatetime\": \"2019-04-15T23:19:01.229223Z\",\n        \"editDatetime\": \"2019-04-15T23:19:01.229223Z\",\n        \"subject\": \"4fa0b764-8913-49d6-a455-8d6eb6d0c8ec\",\n        \"studentGroup\": \"19c85e69-6d9d-4cc5-a41f-dcf16e293ade\"\n    },\n    {\n        \"id\": \"24cd4c28-1e04-438f-acaa-8166b719efdb\",\n        \"name\": \"Лабораторная работа № 2\",\n        \"description\": \"\",\n        \"file\": null,\n        \"attachment\": null,\n        \"deadline\": null,\n        \"createDatetime\": \"2019-04-15T23:46:52.383130Z\",\n        \"editDatetime\": \"2019-04-15T23:46:52.383130Z\",\n        \"subject\": \"4fa0b764-8913-49d6-a455-8d6eb6d0c8ec\",\n        \"studentGroup\": \"19c85e69-6d9d-4cc5-a41f-dcf16e293ade\"\n    }\n]"
						}
					]
				},
				{
					"name": "Edit task",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{apiUrl}}/works/tasks/{{task_id}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"tasks",
								"{{task_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a178493-69a5-42d1-afbd-1923891e5788",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests[\"response contains 'access' property\"] = responseJSON.hasOwnProperty('access');",
									"",
									"if (tests[\"response contains 'access' property\"]) { ",
									"    pm.globals.set(\"access_token\", responseJSON.access);",
									"}",
									"",
									"tests[\"Global variable 'access_token' has been set\"] = pm.globals.get('access_token') === responseJSON.access;",
									"",
									"tests[\"response contains 'refresh' property\"] = responseJSON.hasOwnProperty('refresh');",
									"",
									"if (tests[\"response contains 'refresh' property\"]) { ",
									"    pm.globals.set(\"refresh_token\", responseJSON.refresh);",
									"}",
									"",
									"tests[\"Global variable 'refresh' has been set\"] = pm.globals.get('refresh_token') === responseJSON.refresh;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{testuser_username}}\",\n\t\"password\": \"{{testuser_password}}\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth/login/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						},
						"description": "Check new user. Get error if not created."
					},
					"response": []
				},
				{
					"name": "Create report",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32f7d7b6-6238-4500-9d10-5b20e173db02",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"",
									"tests[\"response contains 'id' property\"] = responseJSON.hasOwnProperty('id');",
									"",
									"pm.globals.set(\"report_id\", responseJSON.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Лаба 2\",\n    \"task\": \"{{task_id}}\"\n    \n}"
						},
						"url": {
							"raw": "{{apiUrl}}/works/reports/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"reports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report from task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/works/tasks/{{task_id}}/report/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"tasks",
								"{{task_id}}",
								"report",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit report by student",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Отчет по лабораторной работе 1",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "atachment",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{apiUrl}}/works/reports/{{report_id}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"reports",
								"{{report_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all reports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/works/reports/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"reports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit report by tutor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"A\",\n    \"comment\": \"Принято\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/works/reports/{{report_id}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"works",
								"reports",
								"{{report_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a0e92463-1935-458e-922c-15448030bcd0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "053c2a58-9075-44b1-9104-10e1a5d314fd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}